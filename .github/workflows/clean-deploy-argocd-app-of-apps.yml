# Reusable workflow that clean a deployment in an ArgoCD App Of Apps Pattern context.
# See https://argo-cd.readthedocs.io/en/stable/operator-manual/cluster-bootstrapping/#app-of-apps-pattern.
# This workflow is triggered by a repository dispatch event.
# See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#repository_dispatch.
# Payload:
#
# ```json
# {
#   "event_type": "clean-deploy",
#   "client_payload": {
#     "repository": "repository name (e.g. my-repository)",
#     "environment": "environment name (e.g. production, review-apps:pr-1234)"
#   }
# }
# ```
---
name: Clean Deploy - ArgoCD App Of Apps

on:
  workflow_call:
    inputs:
      runs-on:
        description: |
          JSON array of runner(s) to use.
          See https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job.
        type: string
        default: '["ubuntu-latest"]'
        required: false
      github-app-id:
        description: |
          GitHub App ID to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
        required: false
        type: string
    secrets:
      github-token:
        description: |
          GitHub token for creating and merging pull request (permissions contents: write and pull-requests: write, workflows: write).
          See https://github.com/hoverkraft-tech/ci-github-common/blob/main/actions/create-and-merge-pull-request/README.md.
      github-app-key:
        description: |
          GitHub App private key to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.

permissions:
  contents: read
  pull-requests: write
  # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
  id-token: write

jobs:
  deploy-files-to-clean:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - id: check-client-payload
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const environment = ${{ toJSON(github.event.client_payload.environment) }};
            if (!environment) {
              core.setFailed("Environment is not defined in the client payload");
              return;
            }
            core.setOutput("environment", environment);

            const repository = ${{ toJSON(github.event.client_payload.repository) }};
            if (!repository) {
              core.setFailed("Repository is not defined in the client payload");
              return;
            }
            core.setOutput("repository", repository);

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # jscpd:ignore-start
      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi
      # jscpd:ignore-end
      - id: get-manifest-files
        uses: ./self-workflow/actions/argocd/get-manifest-files
        with:
          environment: ${{ steps.check-client-payload.outputs.environment }}
          repository: ${{ steps.check-client-payload.outputs.repository }}

      - id: remove-files
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const fs = require("node:fs");

            let hasChanges = false;

            const applicationFile = ${{ toJSON(steps.get-manifest-files.outputs.application-file) }};
            if (fs.existsSync(applicationFile)) {
              fs.unlinkSync(applicationFile);
              hasChanges = true;
            }

            const manifestFile = ${{ toJSON(steps.get-manifest-files.outputs.manifest-file) }};
            if (fs.existsSync(manifestFile)) {
              fs.unlinkSync(manifestFile);
              hasChanges = true;
            }

            core.setOutput("has-changes", hasChanges);

      # jscpd:ignore-start
      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        if: ${{ steps.remove-files.outputs.has-changes == 'true' && inputs.github-app-id }}
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}
      # jscpd:ignore-end

      - uses: hoverkraft-tech/ci-github-common/actions/create-and-merge-pull-request@1c379f7f6e0fc850fe5a7111f74d54e159b4dcd2 # 0.26.0
        if: steps.remove-files.outputs.has-changes == 'true'
        with:
          github-token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}
          branch: chore/clean-review-apps-${{ github.event.client_payload.repository }}
          title: "feat(${{ github.event.client_payload.repository }}): clean review apps"
          body: Clean review apps of ${{ github.event.client_payload.repository }}
          commit-message: |
            feat(${{ github.event.client_payload.repository }}): clean review apps

            [skip ci]

      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        if: always() && steps.oidc.outputs.job_workflow_repo_name_and_owner
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
