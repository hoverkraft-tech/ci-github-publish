# Reusable workflow to clean some deployment.
#
# Deletes one or more deployments and runs a follow-up "clean" action
# (for example a repository-dispatch) to perform any repository-specific cleanup required after deployment removal.
# The workflow can be triggered on-demand via a given comment trigger (e.g. `/undeploy`).
#
# Behavior / outputs:
#
# - Deletes matching deployment(s) via the local action at `./actions/deployment/delete`.
# - Exposes deleted environments in step output `environments`.
# - If environments were deleted the workflow will optionally trigger the configured clean action
#   (e.g. repository-dispatch) against the target repository and post a summary comment.

name: "Clean deploy"

on:
  workflow_call:
    inputs:
      runs-on:
        description: |
          JSON array of runner(s) to use.
          See https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job.
        type: string
        default: '["ubuntu-latest"]'
        required: false
      github-app-id:
        description: |
          GitHub App ID to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
        required: false
        type: string
      clean-deploy-type:
        description: |
          Type of clean-deploy action.
          Supported values:
            - [`repository-dispatch`](../../actions/clean-deploy/repository-dispatch/README.md).
        type: string
        required: false
        default: repository-dispatch
      clean-deploy-parameters:
        description: |
          Inputs to pass to the clean action.
          JSON object, depending on the clean-deploy-type.
          For example, for `repository-dispatch`:
          ```json
          {
            "repository": "my-org/my-repo"
          }
          ```
        type: string
      trigger-on-comment:
        description: |
          Comment trigger to start the workflow.
          See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment.
        type: string
        default: "/undeploy"
        required: false
    secrets:
      github-token:
        description: |
          GitHub token for deploying.
          Permissions:
            - contents: write
      github-app-key:
        description: |
          GitHub App private key to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.

permissions:
  contents: write
  issues: write
  packages: write
  pull-requests: write
  actions: read
  deployments: write
  # FIXME: This is a workaround for having workflow ref. See https://github.com/orgs/community/discussions/38659
  id-token: write

jobs:
  prepare-clean-deploy:
    name: Check if should clean deploy
    runs-on: ${{ fromJson(inputs.runs-on) }}
    outputs:
      trigger: ${{ steps.trigger.outputs.trigger }}
    steps:
      # jscpd:ignore-start
      - id: not-created-issue-comment
        if: github.event_name != 'issue_comment'
        run: echo "result=true" >> "$GITHUB_OUTPUT"

      - uses: shanegenschaw/pull-request-comment-trigger@de309e4a2e83bb08877cada483e3e2b13b8d8e4b # v3.0.0
        id: trigger-on-comment
        if: ${{ steps.not-created-issue-comment.outputs.result != 'true' && inputs.trigger-on-comment }}
        with:
          trigger: ${{ inputs.trigger-on-comment }}
          prefix_only: true
          reaction: eyes
        env:
          GITHUB_TOKEN: "${{ github.token }}"

      - id: trigger
        if: ${{ steps.not-created-issue-comment.outputs.result == 'true' || steps.trigger-on-comment.outputs.triggered == 'true' }}
        run: |
          if [ "${{ steps.not-created-issue-comment.outputs.result }}" = "true" ]; then
            echo "trigger=${{ github.event_name }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          if [ "${{ steps.trigger-on-comment.outputs.triggered }}" = "true" ]; then
            echo "trigger=${{ github.event_name }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi
      # jscpd:ignore-end

  clean-deploy:
    name: Clean deploy
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: prepare-clean-deploy
    if: needs.prepare-clean-deploy.outputs.trigger
    steps:
      # jscpd:ignore-start
      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          echo "self-workflow" >> .gitignore
          echo "self-workflow" >> .dockerignore

      - id: prepare-cleaning
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // Repository
            const repository = `${{ fromJSON(inputs.clean-deploy-parameters).repository }}`.trim();

            if (repository) {
              core.setOutput("repository", repository);

              const [ownerName, repoName] = repository.split('/');
              core.setOutput("owner", ownerName);
            }

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        if: ${{ inputs.github-app-id }}
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}
          owner: ${{ steps.prepare-cleaning.outputs.owner }}
      # jscpd:ignore-end

      - id: delete-deployment
        uses: ./self-workflow/actions/deployment/delete
        with:
          token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}

      - uses: ./self-workflow/actions/clean-deploy/repository-dispatch
        if: ${{ steps.delete-deployment.outputs.environments && steps.delete-deployment.outputs.environments != '[]' && inputs.clean-deploy-type == 'repository-dispatch' }}
        with:
          repository: ${{ steps.prepare-cleaning.outputs.repository }}
          environment: ${{ fromJSON(steps.delete-deployment.outputs.environments)[0] }}
          github-token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}

      - uses: hoverkraft-tech/ci-github-common/actions/create-or-update-comment@b7dd413209df265bef8d7eb0efb117eaabc684c4 # 0.27.0
        if: ${{ steps.delete-deployment.outputs.environments && steps.delete-deployment.outputs.environments != '[]' }}
        with:
          title: "Deployment(s) have been deleted :wastebasket:."
          body: "The following deployment(s) have been deleted:\n\n- ${{ join(fromJSON(steps.delete-deployment.outputs.environments),'\n- ') }}"

      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        if: always() && steps.oidc.outputs.job_workflow_repo_name_and_owner
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
