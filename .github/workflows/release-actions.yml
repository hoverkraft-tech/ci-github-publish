# Reusable workflow that detects changed GitHub Actions and workflow files,
# generates or updates their readme documentation (including version updates),
# and publishes the resulting documentation changes back to the repository.
#
# Key behaviors:
# - Detect changed actions and workflows (or optionally update all).
# - Generate documentation files for each changed Action/workflow
# - Commit and push documentation updates (via a pull request.
# - Publish documentation to GitHub Pages on push to default branch.

name: Release Actions

on:
  workflow_call:
    inputs:
      runs-on:
        description: |
          JSON array of runner(s) to use.
          See https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job.
        type: string
        default: '["ubuntu-latest"]'
        required: false
      update-all:
        description: "Update all actions and workflows, regardless of changes."
        required: false
        default: false
        type: boolean
      github-app-id:
        description: |
          GitHub App ID to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
        required: false
        type: string
    secrets:
      github-token:
        description: |
          GitHub token for creating and merging pull request (permissions contents: write and pull-requests: write, workflows: write).
          See https://github.com/hoverkraft-tech/ci-github-common/blob/main/actions/create-and-merge-pull-request/README.md.
      github-app-key:
        description: |
          GitHub App private key to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.

permissions:
  contents: read

jobs:
  generate-documentation:
    name: Generate documentation
    runs-on: ${{ fromJson(inputs.runs-on) }}
    outputs:
      changed-documentations: ${{ steps.generate-documentation.outputs.destination }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - id: changed-files
        if: ${{ inputs.update-all == false }}
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          files: |
            ./actions/**
            ./.github/workflows/*
          dir_names_exclude_current_dir: true
          json: true

      - id: get-changed-manifests
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const { join, relative } = require('path');
            const changedFilesOutputs = "${{ steps.changed-files.outputs.all_changed_and_modified_files || '[]' }}";
            const changedFiles = JSON.parse(changedFilesOutputs).map(f => f.trim()).filter(Boolean).map(f => join(${{toJson(github.workspace)}}, f));

            const currentWorkflow = ${{ toJson(github.workflow_ref) }}.replace(`${{ github.repository }}/`, '').replace(/@.*/, '');
            const currentWorkflowHasChanged = changedFiles.includes(currentWorkflow);

            const updateAll = ${{ toJson(inputs.update-all) }};
            const forceUpdate = currentWorkflowHasChanged || updateAll;

            const changedManifests = new Set();

            // Retrieve action manifests
            const globber = await glob.create('./actions/**/action.yml');
            for await (const file of globber.globGenerator()) {
              core.debug(`Found action manifest: ${file}`);
              if (forceUpdate || changedFiles.includes(file)) {
                core.debug(`Including action manifest: ${file}`);
                changedManifests.add(file);
              }
            }

            // Retrieve workflow manifests
            const workflowGlobber = await glob.create('./.github/workflows/*.yml');
            for await (const file of workflowGlobber.globGenerator()) {
              core.debug(`Found workflow manifest: ${file}`);
              // Ignore internal workflows
              if (file.match(/\/\.github\/workflows\/__.*\.yml$/)) {
                core.debug(`Ignoring internal workflow manifest: ${file}`);
                continue;
              }

              if (forceUpdate || changedFiles.includes(file)) {
                core.debug(`Including workflow manifest: ${file}`);
                changedManifests.add(file);
              }
            }

            core.setOutput(
              'changed-manifests',
                Array.from(changedManifests)
                .map(filePath => relative(${{ toJson(github.workspace) }}, filePath))
                .join('\n')
            );

      - name: ðŸ“– Generate documentation
        id: generate-documentation
        uses: hoverkraft-tech/ci-dokumentor@b051c2ce43586eb75ce84b85728992ad1f634f13 # 0.2.1
        with:
          source: ${{ steps.get-changed-manifests.outputs.changed-manifests }}

      - id: generated-documentation
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            // FIXME: Workaround to preserve full path to artifact, add a wildcard to the first folder of the absolute path
            const destinations = ${{ toJson(steps.generate-documentation.outputs.destination) }};
            const artifactPaths = destinations.map(d => d.replace(/\/([^/]+)/, '/*$1'));
            core.setOutput('artifact-paths', artifactPaths);

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: changed-files
          path: ${{ steps.generated-documentation.outputs.artifact-paths }}
          if-no-files-found: error
          include-hidden-files: true

  update-documentation:
    name: Update Documentation
    needs: [generate-documentation]
    if: needs.generate-documentation.outputs.changed-documentations != '[]'
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: changed-files
          path: /

      # jscpd:ignore-start

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        if: inputs.github-app-id
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}

      # jscpd:ignore-end

      - uses: hoverkraft-tech/ci-github-common/actions/create-and-merge-pull-request@1c379f7f6e0fc850fe5a7111f74d54e159b4dcd2 # 0.26.0
        with:
          github-token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}
          branch: docs/actions-workflows-documentation-update
          title: "docs: update actions and workflows documentation"
          body: Update actions and workflows documentation
          commit-message: |
            docs: update actions and workflows documentation

            [skip ci]

  publish-documentation:
    name: Publish Documentation
    needs: [generate-documentation]
    if: github.event_name == 'push' && github.ref_name == github.event.repository.default_branch
    runs-on: ${{ fromJson(inputs.runs-on) }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.url }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          pattern: changed-files
          path: /

      # FIXME: This is a workaround for having workflow actions. See https://github.com/orgs/community/discussions/38659
      - id: oidc
        uses: ChristopherHX/oidc@73eee1ff03fdfce10eda179f617131532209edbd # v3

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          path: ./self-workflow
          repository: ${{ steps.oidc.outputs.job_workflow_repo_name_and_owner }}
          ref: ${{ steps.oidc.outputs.job_workflow_repo_ref }}
          sparse-checkout: |
            actions
      - run: |
          if [ -f .gitignore ]; then grep -q "self-workflow" .gitignore || echo "self-workflow" >> .gitignore; else echo "self-workflow" >> .gitignore; fi
          if [ -f .dockerignore ]; then grep -q "self-workflow" .dockerignore || echo "self-workflow" >> .dockerignore; else echo "self-workflow" >> .dockerignore; fi

      - id: build-jekyll
        uses: ./self-workflow/actions/deploy/jekyll

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        if: inputs.github-app-id
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}

      - id: deployment
        uses: ./self-workflow/actions/deploy/github-pages
        with:
          build-path: ${{ steps.build-jekyll.outputs.build-path }}
          github-token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}
