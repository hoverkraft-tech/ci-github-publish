# Reusable workflow that detects changed GitHub Actions and workflow files,
# generates or updates their readme documentation (including version updates),
# and publishes the resulting documentation changes back to the repository.
#
# Key behaviors:
#
# - Detect changed actions and workflows (or optionally update all).
# - Generate documentation files for each changed Action/workflow
# - Commit and push documentation updates (via a pull request.
# - Publish documentation to GitHub Pages on push to default branch.

name: Release Actions

on:
  workflow_call:
    inputs:
      runs-on:
        description: |
          JSON array of runner(s) to use.
          See https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job.
        type: string
        default: '["ubuntu-latest"]'
        required: false
      update-all:
        description: "Update all actions and workflows, regardless of changes."
        required: false
        default: false
        type: boolean
      github-app-id:
        description: |
          GitHub App ID to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
        required: false
        type: string
    secrets:
      github-token:
        description: |
          GitHub token for creating and merging pull request (permissions contents: write and pull-requests: write, workflows: write).
          See https://github.com/hoverkraft-tech/ci-github-common/blob/main/actions/create-and-merge-pull-request/README.md.
      github-app-key:
        description: |
          GitHub App private key to generate GitHub token in place of github-token.
          See https://github.com/actions/create-github-app-token.
    outputs:
      artifact-id:
        description: "ID of the uploaded artifact containing generated documentation."
        value: ${{ jobs.upload-documentation-artifact.outputs.artifact-id }}

permissions:
  contents: read

jobs:
  get-documentation-changes:
    name: Get documentation changes
    runs-on: ${{ fromJson(inputs.runs-on) }}
    outputs:
      manifest-files: ${{ steps.get-changed-files.outputs.manifest-files }}
      documentation-files: ${{ steps.get-changed-files.outputs.documentation-files }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0

      - id: get-manifest-files
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const manifestFiles = [];

            // Retrieve action manifests
            const actionGlobber = await glob.create('./actions/**/action.yml');
            for await (const file of actionGlobber.globGenerator()) {
              core.debug(`Found action manifest: ${file}`);
              manifestFiles.push(file);
            }

            // Retrieve workflow manifests
            const workflowGlobber = await glob.create('./.github/workflows/*.yml');
            for await (const file of workflowGlobber.globGenerator()) {
              core.debug(`Found workflow manifest: ${file}`);
              // Ignore internal workflows
              if (file.match(/\/\.github\/workflows\/__.*\.yml$/)) {
                core.debug(`Ignoring internal workflow manifest: ${file}`);
                continue;
              }
              core.debug(`Including workflow manifest: ${file}`);
              manifestFiles.push(file);
            }

            if (manifestFiles.length === 0) {
              core.warning('No action or workflow manifests found.');
              return;
            }

            core.setOutput(
              'paths',
              manifestFiles
                .join('\n')
            );

      - id: get-documentation-files
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const path = require('node:path');
            const fs = require('fs');

            const allFiles = [
              './README.md',
              './CONTRIBUTING.md',
              './.github/logo.svg',
            ].filter(documentationPath => fs.existsSync(documentationPath))
            .map(documentationPath => path.resolve(documentationPath));

            // Retrieve action manifests
            const actionsGlobber = await glob.create('./actions/**/README.md');
            for await (const file of actionsGlobber.globGenerator()) {
              core.debug(`Found action documentation: ${file}`);
              allFiles.push(file);
            }

            // Retrieve workflow manifests
            const workflowsGlobber = await glob.create('./.github/workflows/*.md');
            for await (const file of workflowsGlobber.globGenerator()) {
              core.debug(`Found workflow documentation: ${file}`);
              // Ignore internal workflows
              if (file.match(/\/\.github\/workflows\/__.*\.md$/)) {
                core.debug(`Ignoring internal workflow documentation: ${file}`);
                continue;
              }
              core.debug(`Including workflow documentation: ${file}`);
              allFiles.push(file);
            }

            if (allFiles.length === 0) {
              core.warning('No documentation files found.');
              return;
            }

            core.setOutput(
              'paths',
              allFiles
                .join('\n')
            );

      - id: changed-files
        if: ${{ inputs.update-all == false && (steps.get-documentation-files.outputs.paths || steps.get-manifest-files.outputs.paths) }}
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          files: |
            ${{ steps.get-documentation-files.outputs.paths }}
            ${{ steps.get-manifest-files.outputs.paths }}
          dir_names_exclude_current_dir: true
          json: true

      - id: get-changed-files
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          UPDATE_ALL: ${{ inputs.update-all }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_and_modified_files || '[]' }}
          DOCUMENTATION_FILES: ${{ steps.get-documentation-files.outputs.paths }}
          MANIFEST_FILES: ${{ steps.get-manifest-files.outputs.paths }}
        with:
          script: |
            const { join, relative } = require('path');
            const changedFilesOutputs = process.env.CHANGED_FILES;
            const changedFiles = JSON.parse(changedFilesOutputs).map(f => f.trim()).filter(Boolean).map(f => join(process.env.GITHUB_WORKSPACE, f));

            const currentWorkflow = process.env.GITHUB_WORKFLOW_REF.replace(`${process.env.GITHUB_REPOSITORY}/`, '').replace(/@.*/, '');
            const currentWorkflowHasChanged = changedFiles.includes(currentWorkflow);

            const updateAll = process.env.UPDATE_ALL.toLowerCase() === 'true';
            const forceUpdate = currentWorkflowHasChanged || updateAll;

            const documentationFiles = process.env.DOCUMENTATION_FILES
              .split('\n')
              .map(f => f.trim())
              .filter(Boolean);

            const changedDocumentationFiles = new Set();
            for(const docPath of documentationFiles) {
              if (forceUpdate || changedFiles.includes(docPath)) {
                core.debug(`Including documentation file: ${docPath}`);
                changedDocumentationFiles.add(docPath);
              }
            }

            core.setOutput(
              'documentation-files',
                Array.from(changedDocumentationFiles)
                .map(filePath => relative(process.env.GITHUB_WORKSPACE, filePath))
                .join('\n')
            );

            const manifestFiles = process.env.MANIFEST_FILES
              .split('\n')
              .map(f => f.trim())
              .filter(Boolean);

            const changedManifestFiles = new Set();
            for(const manifestPath of manifestFiles) {
              if (forceUpdate || changedFiles.includes(manifestPath)) {
                core.debug(`Including manifest file: ${manifestPath}`);
                changedManifestFiles.add(manifestPath);
              }
            }

            core.setOutput(
              'manifest-files',
                Array.from(changedManifestFiles)
                .map(filePath => relative(process.env.GITHUB_WORKSPACE, filePath))
                .join('\n')
            );

  generate-documentation:
    name: Generate documentation
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: get-documentation-changes
    if: needs.get-documentation-changes.outputs.manifest-files
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
      documentation-files: ${{ steps.generate-documentation.outputs.destination }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: ðŸ“– Generate documentation
        id: generate-documentation
        uses: hoverkraft-tech/ci-dokumentor@c46a1a108957237cf485103a80b060c35c7dba33 # 0.2.2
        with:
          source: ${{ needs.get-documentation-changes.outputs.manifest-files }}

      # FIXME: Workaround to preserve full path to artifact, add a wildcard to the first folder of the absolute path
      - id: generated-documentation
        if: steps.generate-documentation.outputs.destination
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        env:
          DESTINATIONS: ${{ steps.generate-documentation.outputs.destination }}
        with:
          script: |
            const { join } = require('path');
            const artifactPaths = process.env.DESTINATIONS
              .split('\n')
              .map(destination => join(process.env.GITHUB_WORKSPACE, destination).replace(/\/([^/]+)/, '/*$1'))
              .join('\n');
            core.setOutput('artifact-paths', artifactPaths);

      - id: upload-artifact
        if: steps.generated-documentation.outputs.artifact-paths
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: changed-files
          path: ${{ steps.generated-documentation.outputs.artifact-paths }}
          if-no-files-found: error
          include-hidden-files: true

  update-documentation:
    name: Update Documentation
    needs: generate-documentation
    if: needs.generate-documentation.outputs.artifact-id
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          artifact-ids: ${{ needs.generate-documentation.outputs.artifact-id }}
          path: /

      # jscpd:ignore-start

      - uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        if: inputs.github-app-id
        id: generate-token
        with:
          app-id: ${{ inputs.github-app-id }}
          private-key: ${{ secrets.github-app-key }}

      # jscpd:ignore-end

      - uses: hoverkraft-tech/ci-github-common/actions/create-and-merge-pull-request@b7dd413209df265bef8d7eb0efb117eaabc684c4 # 0.27.0
        with:
          github-token: ${{ steps.generate-token.outputs.token || secrets.github-token || github.token }}
          branch: docs/actions-workflows-documentation-update
          title: "docs: update actions and workflows documentation"
          body: Update actions and workflows documentation
          commit-message: |
            docs: update actions and workflows documentation

            [skip ci]

  upload-documentation-artifact:
    name: Upload Documentation Artifact
    needs: [get-documentation-changes, generate-documentation]
    if: needs.generate-documentation.outputs.artifact-id || needs.get-documentation-changes.outputs.documentation-files
    runs-on: ${{ fromJson(inputs.runs-on) }}
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        if: needs.generate-documentation.outputs.artifact-id
        with:
          artifact-ids: ${{ needs.generate-documentation.outputs.artifact-id }}
          path: /

      - id: upload-artifact
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: documentation-files-${{ github.run_id }}
          path: |
            ${{ needs.get-documentation-changes.outputs.documentation-files }}
            ${{ needs.generate-documentation.outputs.documentation-files }}
