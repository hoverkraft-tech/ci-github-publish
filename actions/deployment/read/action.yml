name: "Deployment - Read deployment"
description: "Action to retrieve some deployment information."
author: hoverkraft
branding:
  icon: list
  color: blue

inputs:
  deployment-id:
    description: "The ID of the deployment to update"
    required: true
  repository:
    description: "The repository where the deployment was made"
    required: false
    default: "${{ github.event.repository.name }}"
  github-token:
    description: |
      GitHub Token to get the deployment information.
      Permissions:
        - deployments: read
      See https://docs.github.com/en/rest/deployments/deployments?apiVersion=2022-11-28#get-a-deployment.
    required: false
    default: ${{ github.token }}

outputs:
  environment:
    description: "The environment of the deployment"
    value: ${{ steps.get-deployment.outputs.environment }}
  url:
    description: "The URL of the deployment"
    value: ${{ steps.get-deployment.outputs.url }}

runs:
  using: "composite"
  steps:
    - id: get-deployment
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const repository = `${{ inputs.repository }}`.trim();           

          const { data: deployment } = await github.rest.repos.getDeployment({
            owner: context.repo.owner,
            repo: repository,
            deployment_id: `${{ inputs.deployment-id }}`
          });

          if (!deployment) {
            core.setFailed(`Deployment with id "${{ inputs.deployment-id }}" not found in repository "${repository}"`);
            return;
          }

          core.setOutput("environment", deployment.environment);
          core.setOutput("url", deployment.url);
